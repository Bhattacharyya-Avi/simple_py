name: SonarQube Analysis

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Important for SonarQube analysis

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with coverage
      run: |
        python -m pytest --cov=src --cov-report=xml --junitxml=test-results.xml tests/

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectKey=sonarqube-python-demo
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.xunit.reportPath=test-results.xml

    # Alternative: Using sonar-scanner directly
    # - name: Install SonarScanner
    #   run: |
    #     dotnet tool install --global dotnet-sonarscanner
    #
    # - name: Run SonarScanner
    #   run: |
    #     sonar-scanner \
    #       -Dsonar.projectKey=sonarqube-python-demo \
    #       -Dsonar.sources=src \
    #       -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
    #       -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
    #       -Dsonar.python.coverage.reportPaths=coverage.xml \
    #       -Dsonar.python.xunit.reportPath=test-results.xml